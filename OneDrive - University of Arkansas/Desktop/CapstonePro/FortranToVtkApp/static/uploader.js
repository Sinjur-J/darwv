let dropArea = document.getElementById('drop-area');
let outputList = document.getElementById('output-list');
let feedback = document.getElementById('feedback');

// Prevent default behaviors for drag and drop
['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    dropArea.addEventListener(eventName, preventDefaults, false);
});

function preventDefaults(e) {
    e.preventDefault();
    e.stopPropagation();
}

// Highlight the drop area when file is dragged over
['dragenter', 'dragover'].forEach(eventName => {
    dropArea.addEventListener(eventName, () => dropArea.classList.add('highlight'), false);
});

// Remove highlight when file leaves drop area or is dropped
['dragleave', 'drop'].forEach(eventName => {
    dropArea.addEventListener(eventName, () => dropArea.classList.remove('highlight'), false);
});

// Handle the drop event
dropArea.addEventListener('drop', handleDrop, false);

function handleDrop(e) {
    let dt = e.dataTransfer;
    let files = dt.files;
    handleFiles(files);
}

// Handle file selection through the input button
document.getElementById('fileElem').addEventListener('change', function(e) {
    let files = e.target.files;
    handleFiles(files);
});

// Handle files dropped or selected
function handleFiles(files) {
    let formData = new FormData();
    [...files].forEach(file => {
        formData.append('files', file);
    });

    // Send the files to the Flask backend
    fetch('/upload', {
        method: 'POST',
        body: formData
    }).then(response => response.json())
      .then(data => {
          displayVTKFiles(data);
          feedback.textContent = 'Upload successful!';
          feedback.style.color = 'green';
      })
      .catch(err => {
          feedback.textContent = 'Upload failed. Please try again.';
          feedback.style.color = 'red';
          console.error(err);
      });
}

// Display the list of VTK files generated by the backend
function displayVTKFiles(files) {
    outputList.innerHTML = ''; // Clear previous outputs
    files.forEach(file => {
        let li = document.createElement('li');
        let link = document.createElement('a');
        link.href = `/download/${file}`;
        link.innerText = file;
        link.target = '_blank';
        li.appendChild(link);
        outputList.appendChild(li);
    });
}
